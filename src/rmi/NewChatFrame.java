/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rmi;

import java.rmi.RemoteException;
import static java.sql.JDBCType.NULL;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JTextArea;
import javax.swing.ListModel;

/**
 *
 * @author Alaa Shafshak
 */
public class NewChatFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form NewJInternalFrame
     */
    IServer serverRef;
    ClientImp client;
    String sender;
    GuiListModels lm = new GuiListModels();
    GroupImp grp;
    private Data data;

    public NewChatFrame(IServer serverRef, String sender, GroupImp grp, ClientImp client) {
        initComponents();
        this.serverRef = serverRef;
        this.sender = sender;
        this.grp = grp;
        this.client = client;
//        try {
//            //System.out.println(grp.getAllClient().toString());
//            grp.setList(new JList(grp.getAllClient().toArray()));
//        } catch (RemoteException ex) {
//            Logger.getLogger(NewChatFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
        jTextField1.setText(grp.getIdGroup());
//        try {
//            for (int i = 0; i < grp.getAllClient().size(); i++) {
//                grp.getList().setModel(lm);
//
////
//            }
//        } catch (RemoteException ex) {
//            Logger.getLogger(NewChatFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
        this.client.setArea(jTextArea1);
        System.out.println("client = " + this.client + "\nJtextarea=" + jTextArea1);
    }
    
    public NewChatFrame(IServer serverRef, String sender, GroupImp grp, ClientImp client, String value) {
        initComponents();
        this.serverRef = serverRef;
        this.sender = sender;
        this.grp = grp;
        this.client = client;
        jTextField1.setText(value);
        this.client.setArea(jTextArea1);
        JTextArea a = this.client.getChat().get(value);
        jTextArea1.setText(a.getText());
        System.out.println("client = " + this.client + "\nJtextarea=" + jTextArea1);
    }

    public NewChatFrame(String name, IServer serverRef, ClientImp client) {
        initComponents();
        this.serverRef = serverRef;
        this.client = client;
        this.client.setArea(jTextArea1);
        this.sender = name;
        this.client.getList().setModel(lm);
        loadBackup();
//        if(!grp.allClients.isEmpty()){
//            jTextField1.setText(grp.allClients.toString());
//        }//else jTextField1.setText("");
    }

    public NewChatFrame(String name, IServer serverRef, ClientImp client, String value) {
        initComponents();
        this.serverRef = serverRef;
        this.client = client;
        this.client.setArea(jTextArea1);
        this.sender = name;
        //this.client.getList().setModel(lm);
        JTextArea a = this.client.getChat().get(value);
        jTextArea1.setText(a.getText());
        
//        if(!grp.allClients.isEmpty()){
//            jTextField1.setText(grp.allClients.toString());
//        }//else jTextField1.setText("");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(360, 500));

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel1.setText("Username:");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("Send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextField2.setText("Type a message");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(jTextField2))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jTextField1ActionPerformed

    private void loadBackup(){
        try {
            if(serverRef.load(sender)!= null){
                Data d = serverRef.load(sender);
                GuiListModels list = (GuiListModels) d.getList().getModel();
                this.client.setList(d.list);
                this.client.setChat(d.getAreamap());
            }   } catch (RemoteException ex) {
            Logger.getLogger(NewChatFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        GuiListModels m = (GuiListModels) this.client.getList().getModel();
        String id = jTextField1.getText();
        System.out.println("server " + serverRef.toString());
        if (grp == null) {
            try {
                grp = new GroupImp();
                grp.setIdGroup(id);
            } catch (RemoteException ex) {
                Logger.getLogger(NewChatFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                //if (!grp.equals(NULL)) {

                if (serverRef.isGroup(id)) {
                    System.out.println(id);
                    System.out.println("Group");
                    m.add(id);
                    System.out.println(id + " added to lm");
                    try {
                        String msg =id+":"+ sender + ":" + jTextField2.getText();
                         if (client.getChat().get(id) == null) {
                            client.getChat().put(id, new JTextArea());
                        }
                        client.getChat().get(id).append("\n"+sender + ":" + jTextField2.getText());
                        serverRef.sendToAll(msg, grp.getIdGroup());
                        //jTextArea1.append("\n" + msg);
                    } catch (RemoteException ex) {
                        Logger.getLogger(NewChatFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } //    } 
                else {
                    System.out.println("client");
                    m.add(id);
                    System.out.println("list:" + lm.getAll());
                    try {
                        String x = sender + ":" + jTextField2.getText();
                        if (client.getChat().get(id) == null) {
                            client.getChat().put(id, new JTextArea());
                        }
                        client.getChat().get(id).append("\n" + jTextField2.getText());
                        serverRef.send(x, id);
                        jTextArea1.append("\n" + jTextField2.getText());

                    } catch (RemoteException ex) {
                        Logger.getLogger(NewChatFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            } catch (RemoteException ex) {
                Logger.getLogger(NewChatFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
//        data.setAreamap((HashMap<String, JTextArea>) new HashMap().put(id, jTextArea1));

    }//GEN-LAST:event_jButton1ActionPerformed

 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rmi;

import java.rmi.RemoteException;
import static java.sql.JDBCType.NULL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;

/**
 *
 * @author Alaa Shafshak
 */
public class NewMsgFrame extends javax.swing.JInternalFrame {

    /**
     * Creates new form NewMsgFrame
     */
    IServer server;
    ClientImp client;
    GuiListModels listModel = new GuiListModels();
    NewChatFrame frame1;
    String user;
    GroupImp grp;
//    NewGroupFrame frame2;

    public NewMsgFrame(String user, IServer server, ClientImp client) {
        initComponents();
        this.server = server;
        this.client = client;
        this.user = user;
//        frame2 = new NewGroupFrame(user, server, client);
//        grp = frame2.getGroup(); 
        jList1.setModel(listModel);
        GuiListModels x = (GuiListModels) this.client.getList().getModel();
        System.out.println("clientmodels:"+x.getAll());
//        if(grp != null){
//            try {
//                for (int i = 0; i < grp.getAllClient().size(); i++) {
//                    grp.getList().setModel(listModel);
//                }
//            } catch (RemoteException ex) {
//                Logger.getLogger(NewMsgFrame.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//            if(grp.equals(NULL)){
//                try {
//                       } catch (RemoteException ex) {
//                    Logger.getLogger(NewMsgFrame.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }else{
        

        for (int i = 0; i < x.getSize(); i++) {
            if (!listModel.contains(x.getElementAt(i))) {
                System.out.println("element:"+x.getElementAt(i));
                listModel.add(x.getElementAt(i));
//                listModel.add(grp.getIdGroup());
//                System.out.println("grp :"+grp.getIdGroup());
            }
        }

//        try {
//            //   jList1 = client.getList();
//            //GuiListModels ll = (GuiListModels) grp.getList().getModel();
//            if(server.listGroups().length != 0){
//                for (int i = 0; i < server.listGroups().length; i++) {
//                     //GuiListModels ll = (GuiListModels) .getList().getModel();
//                     
//                }
//               
//            } else {
//            }
//                
//        } catch (RemoteException ex) {
//            Logger.getLogger(NewMsgFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }
        // listModel =   (GuiListModels) client.getList().getModel();
//          listModel.addElement("test");
        //if (ll.isEmpty()) {
        //            }
        //        }
//        } else {
//            for (int i = 0; i < ll.getSize(); i++) {
//                if (!listModel.contains(ll.getElementAt(i))) {
//                    listModel.add(ll.getElementAt(i));
//                }
//
//            }
        System.out.println("contacts:" + jList1.getModel().toString());
//        listModel.addElement("test");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Cambria", 1, 14)); // NOI18N
        jLabel1.setText("New Messages");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jLabel1)))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(62, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jList1MousePressed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        System.out.println("clicked");
        if (evt.getClickCount() == 2) {
            try {
                if (listModel.isEmpty()) {
                    System.out.println("list is empty");
                    return;
                }
                System.out.println("list is not empty");
                String a = jList1.getSelectedValue();
                System.out.println(a);
                if(server.isGroup(a)){
                    frame1 = new NewChatFrame(server, user, grp, client,a);
                    
                    System.out.println("a is a group");
                }else{
                    frame1 = new NewChatFrame(user, server, client, a);
                    System.out.println("a is not a group");
                }
                frame1.moveToFront();
        this.getDesktopPane().add(frame1);
                frame1.setVisible(true);
            } catch (RemoteException ex) {
                Logger.getLogger(NewMsgFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jList1MouseClicked

    public JList<String> getjList1() {
        return jList1;
    }

    public void saveData() {
        try {
            Data c = new Data(jList1, client.getChat());
            server.save(user, c);
            server.disconnect(user);
        } catch (RemoteException ex) {
            Logger.getLogger(NewMsgFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
